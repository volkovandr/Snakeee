{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"obj",
				"object_at_new_head\tstatement"
			],
			[
				"ob",
				"object_at_new_head\tstatement"
			],
			[
				"draw",
				"draw_food\tfunction"
			],
			[
				"o",
				"obj\tforstmt"
			],
			[
				"rand",
				"random_food\tfunction"
			],
			[
				"ran",
				"random_food\tfunction"
			],
			[
				"cir",
				"circle_position"
			],
			[
				"direc",
				"direction\tparam"
			],
			[
				"he",
				"head_y\tstatement"
			],
			[
				"dr",
				"draw_grid\tfunction"
			],
			[
				"fr",
				"frame_position\tparam"
			],
			[
				"oj",
				"objects"
			],
			[
				"fra",
				"frame_position\tstatement"
			],
			[
				"fram",
				"frame_position\tstatement"
			],
			[
				"snake",
				"snake_color\tstatement"
			],
			[
				"hea",
				"head_y\tstatement"
			],
			[
				"gri",
				"grid_size\tstatement"
			],
			[
				"circl",
				"circle_position\tstatement"
			],
			[
				"dire",
				"direction_stack\tstatement"
			],
			[
				"head",
				"head_y\tstatement"
			],
			[
				"dra",
				"draw_grid\tfunction"
			],
			[
				"frame",
				"framestart\tstatement"
			],
			[
				"direct",
				"direction_key_map\tstatement"
			],
			[
				"s",
				"set_direction\tfunction"
			],
			[
				"segmen",
				"segment_no\tforstmt"
			],
			[
				"segme",
				"segment_no\tforstmt"
			],
			[
				"se",
				"segments"
			],
			[
				"window",
				"window_height\tstatement"
			],
			[
				"wi",
				"window_width\tstatement"
			],
			[
				"line",
				"line_no\tforstmt"
			],
			[
				"re",
				"reverse\tfunction"
			],
			[
				"del",
				"deltas\tstatement"
			],
			[
				"len",
				"length\tparam"
			],
			[
				"dic",
				"direction\tstatement"
			],
			[
				"in",
				"init_screen\tfunction"
			],
			[
				"key",
				"key_turn\tstatement"
			],
			[
				"co",
				"cos\tfunction"
			],
			[
				"max",
				"max_length\tstatement"
			],
			[
				"time",
				"timediff\tparam"
			],
			[
				"stat",
				"static_file\tfunction"
			],
			[
				"aja",
				"ajax_button"
			],
			[
				"tex",
				"text-align"
			],
			[
				"fad",
				"fade_lenght"
			],
			[
				"event",
				"eventObject"
			],
			[
				"fun",
				"function"
			],
			[
				"font",
				"font-weight"
			],
			[
				"sea",
				"search_process\tfunction"
			],
			[
				"start",
				"start_http_server\tfunction"
			],
			[
				"st",
				"start_http_server\tstatement"
			],
			[
				"my",
				"my_module_mocker\tmodule"
			],
			[
				"Kafka",
				"KafkaConsumer"
			],
			[
				"posg",
				"postgres_kafka_sender"
			],
			[
				"kafk",
				"kafka_config"
			],
			[
				"post",
				"postgres_kafka_sender"
			],
			[
				"prome",
				"prometheus_multiproc_dir"
			],
			[
				"messag",
				"message_counter\tstatement"
			],
			[
				"commi",
				"commit_counter\tstatement"
			],
			[
				"hash",
				"hash_value\tstatement"
			],
			[
				"message",
				"message_id\tparam"
			],
			[
				"wo",
				"worker_processes\tstatement"
			],
			[
				"conn",
				"_conn"
			],
			[
				"mess",
				"message_id"
			],
			[
				"data",
				"database_password"
			],
			[
				"database",
				"database_user"
			],
			[
				"database_",
				"database_name"
			],
			[
				"dat",
				"database_host"
			],
			[
				"prom",
				"prometheus_multiproc_dir"
			],
			[
				"met",
				"metrics\tmodule"
			],
			[
				"this",
				"thisisaverylogworkhahahahahhahahahah"
			],
			[
				"t",
				"test_schema2\tschema"
			],
			[
				"parse",
				"parseFrom\tfunction"
			],
			[
				"tes",
				"test_schema2\tschema"
			],
			[
				"p",
				"pg_catalog\tschema"
			],
			[
				"test",
				"testanogo"
			],
			[
				"assertEqual",
				"assertSetEqual\tfunction"
			],
			[
				"NotIm",
				"NotImplementedError\tclass"
			],
			[
				"cursor",
				"cursor_position_info"
			],
			[
				"table",
				"table_or_schemaname"
			],
			[
				"par",
				"ParseException\tclass"
			],
			[
				"nam",
				"setName\tfunction"
			],
			[
				"postgresq",
				"postgresql_autocompletion\tmodule"
			],
			[
				"postg",
				"postgresql_autocompletion\tmodule"
			],
			[
				"b",
				"base_parse\tfunction"
			],
			[
				"asse",
				"assertEqual\tfunction"
			],
			[
				"dbmock",
				"dbmocker_query_service\timport"
			],
			[
				"assertisnot",
				"assertIsNotNone\tfunction"
			],
			[
				"postgresql",
				"postgresql_query_service"
			],
			[
				"postgre",
				"postgresql_query_service"
			],
			[
				"postgresql_",
				"postgresql_query_service\tmodule"
			],
			[
				"ass",
				"assertEqual\tfunction"
			]
		]
	},
	"buffers":
	[
		{
			"file": "py/snakeee.py",
			"settings":
			{
				"buffer_size": 1440,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "py/grid.py",
			"settings":
			{
				"buffer_size": 1348,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "py/food.py",
			"settings":
			{
				"buffer_size": 474,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "py/snake.py",
			"settings":
			{
				"buffer_size": 2811,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "py/graph.py",
			"settings":
			{
				"buffer_size": 2237,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 277.0,
		"last_filter": "package control insta",
		"selected_items":
		[
			[
				"package control insta",
				"Package Control: Install Package"
			],
			[
				"gti commit",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"git sta",
				"Git: Status"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"",
				"Anaconda: Run Project Tests"
			],
			[
				"test",
				"Anaconda: Run Project Tests"
			],
			[
				"git comit",
				"Git: Commit"
			],
			[
				"gti add",
				"Git: Add All"
			],
			[
				"git add all",
				"Git: Add All"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"command",
				"Plugin Test Command1"
			],
			[
				"git psuh",
				"Git: Push"
			],
			[
				"git stats",
				"Git: Status"
			],
			[
				"git add ",
				"Git: Add All"
			],
			[
				"package control inst",
				"Package Control: Install Package"
			],
			[
				"packag",
				"Package Control: List Packages"
			],
			[
				"pac",
				"Package Control: Remove Package"
			],
			[
				"git statu",
				"Git: Status"
			],
			[
				"GIT ADD",
				"Git: Add Current File"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"comma",
				"Plugin Test Command1"
			],
			[
				"package con",
				"Package Control: Install Package"
			],
			[
				"pep",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"git commi",
				"Git: Commit"
			],
			[
				"git add a",
				"Git: Add All"
			],
			[
				"g",
				"Git: Add Current File"
			],
			[
				"git add al",
				"Git: Add All"
			],
			[
				"pep8",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"git pull",
				"Git: Pull"
			],
			[
				"packa",
				"Package Control: Install Package"
			]
		],
		"width": 949.0
	},
	"console":
	{
		"height": 881.0,
		"history":
		[
			"print(view.word(1))",
			"print(view.word(3))",
			"print(view.word(1))",
			"print(view.word(2))",
			"print(view.word(1))",
			"print(view)",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Andrey/Documents/programing/Snakeee",
		"/C/Users/Andrey/Documents/programing/Snakeee/py"
	],
	"file_history":
	[
		"/C/Users/Andrey/Documents/programing/Snakeee/snakeee.sublime-project",
		"/C/Users/Andrey/Documents/tyntec/postgres-kafka-sender/postgres-kafka-sender.sublime-project",
		"/C/Users/Andrey/Documents/programing/beginner-html-site-styled-gh-pages/scripts/my_jquery.js",
		"/C/Users/Andrey/Documents/programing/beginner-html-site-styled-gh-pages/ajax_server.py",
		"/C/Users/Andrey/Documents/programing/beginner-html-site-styled-gh-pages/start.html",
		"/C/Users/Andrey/Documents/programing/beginner-html-site-styled-gh-pages/scripts/main.js",
		"/C/Users/Andrey/Documents/programing/beginner-html-site-styled-gh-pages/index.html",
		"/C/Users/Andrey/Documents/programing/python-talking-slow/slow.py",
		"/C/Users/Andrey/Documents/tyntec/experimental-mnp-database-performance/init_schema.py",
		"/C/Soft/Sublime3/Data/Packages/Anaconda/Anaconda.sublime-settings",
		"/C/Users/Andrey/Documents/tyntec/experimental-mnp-database-performance/experimental-mnp-database-performance.sublime-project",
		"/C/Users/Andrey/Documents/programing/python-module-replace/my_module.py",
		"/C/Users/Andrey/Documents/programing/python-module-replace/python-module-replace.sublime-priject.sublime-project",
		"/C/Users/Andrey/Documents/programing/python-module-replace/my_module_mocker.py",
		"/C/Users/Andrey/Documents/programing/python-module-replace/test_my.py",
		"/C/Users/Andrey/Documents/programing/python-module-replace/main.py",
		"/C/Users/Andrey/Documents/tyntec/postgres-kafka-sender/init_schema.sql",
		"/C/Users/Andrey/Documents/tyntec/experimental-postgresql-load-test/test_result",
		"/C/Users/Andrey/Documents/tyntec/experimental-postgresql-load-test/metrics.py",
		"/C/Users/Andrey/Documents/tyntec/experimental-postgresql-load-test/event_writer.py",
		"/C/Users/Andrey/Documents/tyntec/experimental-postgresql-load-test/settings.py",
		"/C/Users/Andrey/Documents/tyntec/experimental-postgresql-load-test/multiprocess_prometheus_test.py",
		"/C/Users/Andrey/Documents/tyntec/experimental-postgresql-load-test/load-test.py",
		"/C/Python35/lib/site-packages/prometheus_client/multiprocess.py",
		"/C/Python35/lib/site-packages/prometheus_client/exposition.py",
		"/C/Python35/lib/site-packages/prometheus_client/core.py",
		"/C/Python35/lib/http/server.py",
		"/C/Python35/lib/socketserver.py",
		"/C/Users/Andrey/Documents/tyntec/experimental-postgresql-load-test/postgresql-load-test.sublime-project",
		"/C/Users/Andrey/Documents/tyntec/experimental-postgresql-load-test/README",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/postgresql_autocompletion_lib/sqlparser.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/unit_test/sqlparser_test.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/postgresql_autocompletion_lib/helpers.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/postgresql_query_service/postgresql_query_service.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/unit_test/sublime_mocker_test.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/sublime_mocker/view.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/unit_test/plugin_test.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/postgresql_autocompletion.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/sublime_mocker/region.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/postgresql_sublime_autocompletion.sublime-project",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/unit_test/postgresql_query_service_test.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/query_service_mocker/dbmocker_query_service.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/unit_test/sublime_interaction_test.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/unit_test/dbmocker_query_service_test.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/plugin_test/commands/plugin_test.py",
		"/C/Soft/Sublime3/Data/Packages/Default/Preferences.sublime-settings",
		"/C/Soft/Sublime3/Data/Packages/User/GitGutter.sublime-settings",
		"/C/Soft/Sublime3/Data/Packages/User/Git.sublime-settings",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/postgresql_autocompletion.sublime-settings",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/postgresql_autocompletion_lib/database_query_service.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/unit_test/module_test.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/postgresql_query_service/postgresql/protocol/element3.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/postgresql_query_service/__init__.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/plugin_test/plugin_test.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/somefile.sql",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/postgresql_autocompletion_lib/test_pyparsing.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/sublime_mocker/__init__.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/unit_test/helpers_test.py",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/postgresql_autocompletion_lib/postgresql_query_service.py",
		"/C/Soft/Sublime3/Data/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Soft/Sublime3/Data/Packages/User/Default (Windows).sublime-keymap",
		"/C/Soft/Sublime3/Data/Packages/User/Preferences.sublime-settings",
		"/C/Soft/Sublime3/Data/Packages/User/Anaconda.sublime-settings",
		"/C/Users/Andrey/Documents/postgresql_autocompletion/postgresql_autocompletion.sublime-project"
	],
	"find":
	{
		"height": 71.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"(time() - self.framestart) * self.speed",
			"framestart",
			"deltas",
			"800",
			"[0]",
			"\\",
			"/",
			"2000",
			"show",
			"hide",
			" \"slow\" ",
			"this",
			"winsound.",
			"build",
			"\\",
			"do_commit",
			"settings.",
			").toList()),",
			"15, 21",
			"25, 27",
			"9, 15",
			"a2\", ",
			"16, 18",
			"9, 15",
			"1, 8",
			"20, 22",
			"10, 16",
			"1, 9",
			"8, 10",
			"1, 7",
			"schema1",
			"public",
			"sql_block",
			"table_or_schema_name",
			"ctrl+b",
			"interpreter"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "py/snakeee.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1440,
						"regions":
						{
						},
						"selection":
						[
							[
								578,
								578
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"open_with_edit": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 487.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "py/grid.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1348,
						"regions":
						{
						},
						"selection":
						[
							[
								811,
								811
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"open_with_edit": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "py/food.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 474,
						"regions":
						{
						},
						"selection":
						[
							[
								228,
								228
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"open_with_edit": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "py/snake.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2811,
						"regions":
						{
						},
						"selection":
						[
							[
								1089,
								1089
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"open_with_edit": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "py/graph.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2237,
						"regions":
						{
						},
						"selection":
						[
							[
								1539,
								1539
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"open_with_edit": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1087.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 43.0
	},
	"input":
	{
		"height": 50.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.exec":
	{
		"height": 580.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 490.0
	},
	"pinned_build_system": "",
	"project": "snakeee.sublime-project",
	"replace":
	{
		"height": 82.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 838.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
